{"version":3,"sources":["components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPost/MyPost.module.css","components/Profile/MyPost/Post/Post.module.css","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileDataForm.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/MyPost/Post/Post.jsx","components/Profile/MyPost/MyPost.jsx","components/Profile/MyPost/MyPostContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["module","exports","ProfileStatusWithHooks","props","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","autoFocus","onBlur","updateStatus","onChange","e","currentTarget","value","ProfileDataReduxForm","reduxForm","form","profile","handleSubmit","error","onSubmit","className","s","formSummaryError","createField","Input","profileStatus","type","Textarea","Object","keys","contacts","map","key","contact","ProfileData","isOwner","goToEditMode","onClick","fullName","aboutMe","lookingForAJob","lookingForAJobDescription","contactTitle","contactValue","Contacts","ProfileInfo","savePhoto","saveProfile","Preloader","descriptionBlock","src","photos","large","userPhoto","mainPhoto","target","files","length","initialValues","formData","then","Post","item","message","likeCount","maxLength10","maxLengthCreator","MyPostReduxForm","Field","name","component","validate","required","placeholder","MyPost","React","memo","postsElements","posts","p","id","postBlock","values","addPost","newPostText","MyPostContainer","connect","state","profilePage","dispatch","addPostActionCreator","Profile","store","ProfileContainer","userId","this","match","params","authorizedUserId","history","push","getUserProfile","getStatus","refreshProfile","prevProps","prevState","snapshot","Component","compose","auth","isAuth","withRouter"],"mappings":"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","file":"static/js/3.f96d1bf4.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__20LkQ\",\"profileStatus\":\"ProfileInfo_profileStatus__3is-U\",\"mainPhoto\":\"ProfileInfo_mainPhoto__3tnPw\",\"contact\":\"ProfileInfo_contact__33AHu\",\"formSummaryError\":\"ProfileInfo_formSummaryError__23XEq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postBlock\":\"MyPost_postBlock__1lU1T\",\"posts\":\"MyPost_posts__xn0TG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__3w6HQ\"};","import React, {useEffect, useState} from \"react\";\r\nimport {updateStatus} from \"../../../Redux/ProfileReducer\";\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n    let [editMode, setEditMode] = useState(false);\r\n    let [status, setStatus] = useState(props.status)\r\n\r\n    useEffect ( () => {\r\n        setStatus(props.status);\r\n    }, [props.status] );\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true);\r\n    }\r\n\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false);\r\n        props.updateStatus(status);\r\n    }\r\n\r\n    const onStatusChange =(e) => {\r\n        setStatus(e.currentTarget.value);\r\n    }\r\n\r\n    return (\r\n    <div>\r\n        { !editMode &&\r\n    <div>\r\n        <span onDoubleClick={ activateEditMode }>{props.status || 'Status'}</span>\r\n    </div>\r\n        }\r\n        { editMode &&\r\n        <div>\r\n            <input autoFocus={true} onBlur={deactivateEditMode} onChange={onStatusChange} value={status}/>\r\n        </div>\r\n        }\r\n    </div>\r\n)\r\n    }\r\nexport default ProfileStatusWithHooks;","import React from \"react\";\r\nimport s from \"./ProfileInfo.module.css\";\r\nimport {createField, Input, Textarea} from \"../../common/FormControls/FormControl\";\r\nimport {reduxForm} from \"redux-form\";\r\n\r\nconst ProfileDataForm = ({profile, handleSubmit, error}) => {\r\n    return ( <form onSubmit={handleSubmit}>\r\n        <div>\r\n            <button>save</button>\r\n            {error && <div className={s.formSummaryError}>\r\n                {error}\r\n            </div>}\r\n        </div>\r\n        <div>\r\n            <b>Full name</b>: {createField(\"Full name\", \"fullName\", Input, [])}\r\n        </div>\r\n        <div>\r\n            <b className={s.profileStatus}>About me</b>: {createField(\"About me\", \"aboutMe\", Input, [])}\r\n        </div>\r\n        <div>\r\n            <b>Looking for a job</b>: {createField(\"\", \"lookingForAJob\", Input, [], {type: \"checkbox\"})}\r\n        </div>\r\n        <div>\r\n            <b className={s.profileStatus}>My professional skills</b>:\r\n            {createField(\"My professional skills\", \"lookingForAJobDescription\", Textarea, [])}\r\n        </div>\r\n        <div>\r\n            <b>Contacts</b>: {Object.keys(profile.contacts).map(key => { return <div key={key} className={s.contact}>\r\n            <b>{key}: {createField(key, \"contacts.\" + key, Input, [])}</b></div>})}\r\n        </div>\r\n    </form>)\r\n}\r\n\r\nconst ProfileDataReduxForm = reduxForm({\r\n    form: 'edit-profile'\r\n})(ProfileDataForm);\r\n\r\nexport default ProfileDataReduxForm;","import React, {useState} from \"react\";\r\nimport s from './ProfileInfo.module.css';\r\nimport Preloader from \"../../common/Preloader/Preloader\";\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\nimport userPhoto from \"../../../assets/images/user.png\"\r\nimport ProfileDataReduxForm from \"./ProfileDataForm\";\r\n\r\nconst ProfileInfo = ({profile, status, updateStatus, isOwner, savePhoto, saveProfile}) => {\r\n\r\n    let [editMode, setEditMode] = useState(false);\r\n\r\n    if(!profile) {\r\n        return <Preloader/>\r\n    }\r\n\r\n    let onMainPhotoSelected = (e) => {\r\n        if (e.target.files.length) {\r\n            savePhoto(e.target.files[0]);\r\n        }\r\n    }\r\n\r\n    const onSubmit = (formData) => {\r\n        saveProfile(formData).then(() => {\r\n            setEditMode(false);\r\n        })\r\n\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className={s.descriptionBlock}>\r\n                <img src={profile.photos.large || userPhoto} className={s.mainPhoto}/>\r\n                { isOwner && <input type={\"file\"} onChange={onMainPhotoSelected}/> }\r\n\r\n                <ProfileStatusWithHooks status={status} updateStatus={updateStatus}/>\r\n\r\n                {editMode\r\n                    ? <ProfileDataReduxForm initialValues={profile} profile={profile} onSubmit={onSubmit}/>\r\n                    : <ProfileData  profile={profile} isOwner={isOwner} goToEditMode={() => {setEditMode(true)}}/>\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst ProfileData = ({profile, isOwner, goToEditMode}) => {\r\n    return ( <div>\r\n        <div>\r\n            {isOwner && <button onClick={goToEditMode}>edit</button>}\r\n        </div>\r\n        <div>\r\n        <strong>{profile.fullName}</strong>\r\n    </div>\r\n    <div>\r\n        <b className={s.profileStatus}>About me</b>: {profile.aboutMe}\r\n    </div>\r\n    <div>\r\n        <b>Looking for a job</b>: {profile.lookingForAJob ? 'Yes': 'No'}\r\n    </div>\r\n    <div>\r\n        <b className={s.profileStatus}>My professional skills</b>: {profile.lookingForAJobDescription}\r\n    </div>\r\n    <div>\r\n        <b>Contacts</b>: {Object.keys(profile.contacts).map(key => { return <Contacts key={key} contactTitle={key} contactValue={profile.contacts[key]}/>\r\n    })}\r\n    </div>\r\n    </div>)\r\n}\r\n\r\n\r\nconst Contacts = ({contactTitle, contactValue}) => {\r\nreturn <div className={s.contact}><b>{contactTitle}</b>: {contactValue}</div>\r\n}\r\n\r\nexport default ProfileInfo;","import React from \"react\";\r\nimport s from './Post.module.css';\r\n\r\nconst Post = (props) => {\r\n    return (\r\n            <div className={s.item}>\r\n                <img src='https://ulibky.ru/wp-content/uploads/2019/10/avatarki_dlya_vatsap_dlya_devushek_42_28061027.jpg'/>\r\n                { props.message }\r\n            <div>\r\n                <span> Like </span>\r\n                { props.likeCount }\r\n            </div>\r\n            </div>\r\n)\r\n}\r\n\r\n\r\nexport default Post;","import React from \"react\";\r\nimport s from './MyPost.module.css';\r\nimport Post from './Post/Post';\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, required} from \"../../../Utils/validators/validators\";\r\nimport {Textarea} from \"../../common/FormControls/FormControl\";\r\n\r\nconst maxLength10 = maxLengthCreator(10);\r\n\r\nconst AddPostForm = (props) => {\r\n    return (<form onSubmit={props.handleSubmit}>\r\n        <div>\r\n            <Field name={\"newPostText\"} component={Textarea} validate={[required, maxLength10]} placeholder={'Post message'}/>\r\n        </div>\r\n        <div>\r\n            <button>Post</button>\r\n        </div>\r\n    </form>)\r\n}\r\n\r\nconst MyPostReduxForm = reduxForm({\r\n    form: 'ProfileAddNewPostForm'\r\n})(AddPostForm)\r\n\r\nconst MyPost = React.memo(props => {\r\n\r\n    let postsElements = props.posts.map( p => <Post key={p.id} message={p.message} likeCount={p.likeCount} key={p.id}/> );\r\n\r\n    let AddNewPost = (values) => {\r\n        props.addPost(values.newPostText);\r\n    }\r\n\r\n    return (\r\n    <div className={s.postBlock}>\r\n        <h3>My posts</h3>\r\n              <div>\r\n                <MyPostReduxForm onSubmit={AddNewPost} />\r\n              </div>\r\n        <div className={s.posts}>\r\n\r\n            { postsElements }\r\n\r\n        </div>\r\n    </div>\r\n)\r\n})\r\n\r\n\r\nexport default MyPost;\r\n","import React from \"react\";\r\nimport {addPostActionCreator, } from \"../../../Redux/ProfileReducer\";\r\nimport MyPost from \"./MyPost\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.profilePage.posts\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPost: (newPostText) => {\r\n            dispatch(addPostActionCreator(newPostText));\r\n        }\r\n    }\r\n}\r\n\r\nconst MyPostContainer = connect(mapStateToProps, mapDispatchToProps)(MyPost);\r\n\r\nexport default MyPostContainer;","import React from \"react\";\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPostContainer from \"./MyPost/MyPostContainer\";\r\n\r\nconst Profile = (props) => {\r\n\r\n    return (\r\n     <div>\r\n         < ProfileInfo profile={props.profile}\r\n                       status={props.status}\r\n                       updateStatus={props.updateStatus}\r\n                       isOwner={props.isOwner} savePhoto={props.savePhoto}\r\n                       saveProfile={props.saveProfile}/>\r\n\r\n         <MyPostContainer store={props.store}/>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default Profile;","import React from \"react\";\r\nimport Profile from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {getStatus, getUserProfile, updateStatus, savePhoto, saveProfile} from \"../../Redux/ProfileReducer\";\r\nimport {withRouter} from 'react-router-dom';\r\nimport {compose} from \"redux\";\r\n\r\n\r\nclass ProfileContainer extends React.Component  {\r\n\r\n    refreshProfile() {\r\n        let userId = this.props.match.params.userId;\r\n        if(!userId) {\r\n            userId = this.props.authorizedUserId;\r\n            if(!userId) {\r\n                this.props.history.push(\"/login\");\r\n            }\r\n        }\r\n        this.props.getUserProfile(userId);\r\n        this.props.getStatus(userId);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.refreshProfile();\r\n\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if(this.props.match.params.userId != prevProps.match.params.userId) {\r\n        this.refreshProfile();\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n    return (\r\n     <Profile {...this.props}\r\n              isOwner={!this.props.match.params.userId}\r\n              profile={this.props.profile}\r\n              status={this.props.status}\r\n              updateStatus={this.props.updateStatus}\r\n              savePhoto={this.props.savePhoto}\r\n              saveProfile={this.props.saveProfile}/>\r\n    )\r\n}\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    authorizedUserId: state.auth.userId,\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {getStatus, updateStatus, getUserProfile, savePhoto, saveProfile}),\r\n    withRouter, /*withAuthRedirect*/)(ProfileContainer);"],"sourceRoot":""}