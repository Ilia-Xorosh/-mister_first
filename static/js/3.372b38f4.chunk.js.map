{"version":3,"sources":["components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPost/MyPost.module.css","components/Profile/MyPost/Post/Post.module.css","components/Profile/ProfileInfo/ProfileStatus.jsx","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/MyPost/Post/Post.jsx","components/Profile/MyPost/MyPost.jsx","components/Profile/MyPost/MyPostContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["module","exports","React","Component","ProfileStatusWithHooks","props","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","autoFocus","onBlur","updateStatus","onChange","e","currentTarget","value","ProfileInfo","profile","Preloader","lookingForAJob","facebook","href","contacts","className","s","descriptionBlock","src","photos","large","fullName","profileStatus","aboutMe","lookingForAJobDescription","Post","item","message","likeCount","maxLength10","maxLengthCreator","MyPostReduxForm","reduxForm","form","onSubmit","handleSubmit","Field","name","component","Textarea","validate","required","placeholder","MyPost","memo","postsElements","posts","map","p","id","postBlock","values","addPost","newPostText","MyPostContainer","connect","state","profilePage","dispatch","addPostActionCreator","Profile","store","ProfileContainer","userId","this","match","params","authorizedUserId","history","push","getUserProfile","setTimeout","getStatus","compose","auth","isAuth","withRouter"],"mappings":"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","file":"static/js/3.372b38f4.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__20LkQ\",\"profileStatus\":\"ProfileInfo_profileStatus__3is-U\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postBlock\":\"MyPost_postBlock__1lU1T\",\"posts\":\"MyPost_posts__xn0TG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__3w6HQ\"};","import React from \"react\";\r\n\r\nclass ProfileStatus extends React.Component {\r\n\r\n    state = {\r\n        editMode: false,\r\n        status: this.props.status\r\n}\r\nactivateEditMode =() => {\r\n    this.setState({\r\n        editMode: true\r\n    })\r\n}\r\n    deactivateEditMode =() => {\r\n        this.setState({\r\n            editMode: false\r\n        })\r\n        this.props.updateStatus(this.state.status);\r\n}\r\n    onStatusChange =(e) => {\r\n        this.setState({\r\n            status : e.currentTarget.value\r\n        })\r\n    }\r\n\r\n    componentDidUpdate (prevProps, prevState)  {\r\n       if(prevProps.status !== this.props.status) {\r\n           this.setState({\r\n               status: this.props.status\r\n           });\r\n       }\r\n\r\n    }\r\n\r\n    render() {\r\n    return (\r\n    <div>\r\n        {!this.state.editMode &&\r\n    <div>\r\n        <span onDoubleClick={ this.activateEditMode }>{this.props.status || 'Status'}</span>\r\n    </div>\r\n        }\r\n        {this.state.editMode &&\r\n        <div>\r\n            <input onChange={this.onStatusChange} autoFocus={true} onBlur={this.deactivateEditMode} value={this.state.status}/>\r\n        </div>\r\n        }\r\n    </div>\r\n)\r\n    }\r\n}\r\nexport default ProfileStatus;","import React, {useEffect, useState} from \"react\";\r\nimport {updateStatus} from \"../../../Redux/ProfileReducer\";\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n    let [editMode, setEditMode] = useState(false);\r\n    let [status, setStatus] = useState(props.status)\r\n\r\n    useEffect ( () => {\r\n        setStatus(props.status);\r\n    }, [props.status] );\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true);\r\n    }\r\n\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false);\r\n        props.updateStatus(status);\r\n    }\r\n\r\n    const onStatusChange =(e) => {\r\n        setStatus(e.currentTarget.value);\r\n    }\r\n\r\n    return (\r\n    <div>\r\n        { !editMode &&\r\n    <div>\r\n        <span onDoubleClick={ activateEditMode }>{props.status || 'Status'}</span>\r\n    </div>\r\n        }\r\n        { editMode &&\r\n        <div>\r\n            <input autoFocus={true} onBlur={deactivateEditMode} onChange={onStatusChange} value={status}/>\r\n        </div>\r\n        }\r\n    </div>\r\n)\r\n    }\r\nexport default ProfileStatusWithHooks;","import React from \"react\";\r\nimport s from './ProfileInfo.module.css';\r\nimport Preloader from \"../../common/Preloader/Preloader\";\r\nimport ProfileStatus from \"./ProfileStatus\";\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\n\r\nconst ProfileInfo = ({profile, status, updateStatus}) => {\r\n    if(!profile) {\r\n        return <Preloader/>\r\n    }\r\n    let lookingForAJob = profile.lookingForAJob;\r\n    lookingForAJob = true ? 'Yes': 'No';\r\n\r\n    let facebook = <a href={profile.contacts.facebook}>Facebook</a>\r\n\r\n    return (\r\n        <div>\r\n            <div className={s.descriptionBlock}>\r\n                <img src={profile.photos.large}/>\r\n                <ProfileStatusWithHooks status={status} updateStatus={updateStatus}/>\r\n                <div>\r\n                    <strong>{profile.fullName}</strong>\r\n                </div>\r\n                <div>\r\n                    <span className={s.profileStatus}>\"{profile.aboutMe}\"</span>\r\n                </div>\r\n                <div>\r\n                    <strong>{facebook}</strong>\r\n                </div>\r\n            <div>\r\n                    <span>Looking for a job: {lookingForAJob}</span>\r\n            </div>\r\n                <div>\r\n                    <span className={s.profileStatus}>\"{profile.lookingForAJobDescription}\"</span>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileInfo;","import React from \"react\";\r\nimport s from './Post.module.css';\r\n\r\nconst Post = (props) => {\r\n    return (\r\n            <div className={s.item}>\r\n                <img src='https://ulibky.ru/wp-content/uploads/2019/10/avatarki_dlya_vatsap_dlya_devushek_42_28061027.jpg'/>\r\n                { props.message }\r\n            <div>\r\n                <span> Like </span>\r\n                { props.likeCount }\r\n            </div>\r\n            </div>\r\n)\r\n}\r\n\r\n\r\nexport default Post;","import React from \"react\";\r\nimport s from './MyPost.module.css';\r\nimport Post from './Post/Post';\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, required} from \"../../../Utils/validators/validators\";\r\nimport {Textarea} from \"../../common/FormControls/FormControl\";\r\n\r\nconst maxLength10 = maxLengthCreator(10);\r\n\r\nconst AddPostForm = (props) => {\r\n    return (<form onSubmit={props.handleSubmit}>\r\n        <div>\r\n            <Field name={\"newPostText\"} component={Textarea} validate={[required, maxLength10]} placeholder={'Post message'}/>\r\n        </div>\r\n        <div>\r\n            <button>Post</button>\r\n        </div>\r\n    </form>)\r\n}\r\n\r\nconst MyPostReduxForm = reduxForm({\r\n    form: 'ProfileAddNewPostForm'\r\n})(AddPostForm)\r\n\r\nconst MyPost = React.memo(props => {\r\n\r\n    let postsElements = props.posts.map( p => <Post message={p.message} likeCount={p.likeCount} key={p.id}/> );\r\n\r\n    let AddNewPost = (values) => {\r\n        props.addPost(values.newPostText);\r\n    }\r\n\r\n    return (\r\n    <div className={s.postBlock}>\r\n        <h3>My posts</h3>\r\n              <div>\r\n                <MyPostReduxForm onSubmit={AddNewPost} />\r\n              </div>\r\n        <div className={s.posts}>\r\n\r\n            { postsElements }\r\n\r\n        </div>\r\n    </div>\r\n)\r\n})\r\n\r\n\r\nexport default MyPost;\r\n","import React from \"react\";\r\nimport {addPostActionCreator, } from \"../../../Redux/ProfileReducer\";\r\nimport MyPost from \"./MyPost\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.profilePage.posts\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPost: (newPostText) => {\r\n            dispatch(addPostActionCreator(newPostText));\r\n        }\r\n    }\r\n}\r\n\r\nconst MyPostContainer = connect(mapStateToProps, mapDispatchToProps)(MyPost);\r\n\r\nexport default MyPostContainer;","import React from \"react\";\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPostContainer from \"./MyPost/MyPostContainer\";\r\n\r\nconst Profile = (props) => {\r\n\r\n    return (\r\n     <div>\r\n         < ProfileInfo profile={props.profile} status={props.status} updateStatus={props.updateStatus}/>\r\n         <MyPostContainer store={props.store}/>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default Profile;","import React from \"react\";\r\nimport Profile from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {getStatus, getUserProfile, updateStatus} from \"../../Redux/ProfileReducer\";\r\nimport {withRouter} from 'react-router-dom';\r\nimport {compose} from \"redux\";\r\n\r\n\r\nclass ProfileContainer extends React.Component  {\r\n    componentDidMount() {\r\n        let userId = this.props.match.params.userId;\r\n        if(!userId) {\r\n            userId = this.props.authorizedUserId;\r\n            if(!userId) {\r\n                this.props.history.push(\"/login\");\r\n            }\r\n        }\r\n            this.props.getUserProfile(userId);\r\n        setTimeout(() => {\r\n            this.props.getStatus(userId);\r\n        }, 1000);\r\n    }\r\n\r\n    render() {\r\n\r\n    return (\r\n     <Profile {...this.props} profile={this.props.profile} status={this.props.status} updateStatus={this.props.updateStatus}/>\r\n    )\r\n}\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    authorizedUserId: state.auth.userId,\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {getStatus, updateStatus, getUserProfile}),\r\n    withRouter, /*withAuthRedirect*/)(ProfileContainer);"],"sourceRoot":""}