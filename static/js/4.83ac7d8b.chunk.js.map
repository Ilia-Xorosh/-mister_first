{"version":3,"sources":["components/Dialogs/Dialogs.module.css","components/Dialogs/Message/Message.jsx","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/DialogForm/DialogForm.jsx","components/Dialogs/Dialogs.jsx","Hoc/WithAuthRedirect.js","components/Dialogs/DialogsContainer.jsx"],"names":["module","exports","Message","props","className","s","message","DialogItem","path","id","dialog","active","src","avatar","to","activeClassName","activelink","name","maxLength100","maxLengthCreator","DialogReduxForm","reduxForm","form","onSubmit","handleSubmit","Field","placeholder","component","Textarea","validate","required","Dialogs","state","dialogsPage","dialogsElements","dialogs","map","d","messagesElements","messages","m","newMessageBody","dialogsItems","messagesLeft","values","sendMessage","mapStateToPropsForRedirect","isAuth","auth","compose","connect","dispatch","sendMessageCreator","Component","RedirectComponent","this","React"],"mappings":"2FACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,aAAe,8BAA8B,OAAS,wBAAwB,OAAS,wBAAwB,WAAa,4BAA4B,SAAW,0BAA0B,QAAU,yBAAyB,aAAe,8BAA8B,cAAgB,iC,8FCQnUC,EANC,SAACC,GACb,OAAQ,qBAAKC,UAAWC,IAAEC,QAAlB,SAA4BH,EAAMG,W,QCS/BC,EATG,SAACJ,GACf,IAAIK,EAAO,YAAcL,EAAMM,GAE/B,OAAO,sBAAKL,UAAWC,IAAEK,OAAS,IAAML,IAAEM,OAAnC,UACH,qBAAKC,IAAKT,EAAMU,SAChB,cAAC,IAAD,CAASC,GAAIN,EAAMO,gBAAiBV,IAAEW,WAAtC,SAAmDb,EAAMc,W,iCCJ3DC,EAAeC,YAAiB,KAiBvBC,EAJSC,YAAU,CAC9BC,KAAM,UADcD,EAXD,SAAClB,GACpB,OAAQ,uBAAMoB,SAAUpB,EAAMqB,aAAtB,UACJ,8BACI,cAACC,EAAA,EAAD,CAAOC,YAAa,qBAAsBT,KAAM,iBAAkBU,UAAWC,IAAUC,SAAU,CAACC,IAAUZ,OAEhH,8BACI,yDC4BGa,EAjCC,SAAC5B,GAEb,IAAI6B,EAAQ7B,EAAM8B,YACdC,EAAkBF,EAAMG,QAAQC,KAAK,SAAAC,GAAC,OAAI,cAAC,EAAD,CAAYpB,KAAMoB,EAAEpB,KAAMJ,OAAQwB,EAAExB,OAAQJ,GAAI4B,EAAE5B,QAC5F6B,EAAmBN,EAAMO,SAASH,KAAK,SAAAI,GAAC,OAAI,cAAC,EAAD,CAAUlC,QAASkC,EAAElC,QAASG,GAAI+B,EAAE/B,QAC/DuB,EAAMS,eAM3B,OACI,sBAAKrC,UAAYC,IAAE8B,QAAnB,UACI,qBAAK/B,UAAWC,IAAEqC,aAAlB,SAEER,IAGL,qBAAK9B,UAAWC,IAAEkC,SAAlB,SACI,sBAAKnC,UAAWC,IAAEsC,aAAlB,UACI,qBAAK/B,IAAI,oGAEV0B,EAEC,cAAC,EAAD,CAAiBf,SAjBV,SAACqB,GACjBzC,EAAM0C,YAAYD,EAAOH,4B,+DCZ7BK,EAA6B,SAACd,GAAD,MAAY,CACzCe,OAAQf,EAAMgB,KAAKD,SCiBRE,sBAAQC,aAdD,SAAClB,GACnB,MAAO,CACHC,YAAaD,EAAMC,gBAIF,SAACkB,GACtB,MAAO,CACHN,YAAa,SAACJ,GACVU,EAASC,YAAmBX,UDTR,SAACY,GAAe,IAEtCC,EAFqC,4JAGvC,WACI,OAAKC,KAAKpD,MAAM4C,OACT,cAACM,EAAD,eAAeE,KAAKpD,QADI,cAAC,IAAD,CAAUW,GAAI,eAJV,GAEX0C,IAAMH,WAStC,OAFqCH,YAAQJ,EAARI,CAAqCI,KCK/DL,CAAyElB","file":"static/js/4.83ac7d8b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__3mAK4\",\"dialogsItems\":\"Dialogs_dialogsItems__-Y3m8\",\"active\":\"Dialogs_active__3zkBa\",\"dialog\":\"Dialogs_dialog__3rYL4\",\"activelink\":\"Dialogs_activelink__1taga\",\"messages\":\"Dialogs_messages__2jYDV\",\"message\":\"Dialogs_message__1Xa2O\",\"messagesLeft\":\"Dialogs_messagesLeft__14bfe\",\"messagesRight\":\"Dialogs_messagesRight__1fJTY\"};","import React from \"react\";\r\nimport s from './../Dialogs.module.css';\r\n\r\nconst Message = (props) => {\r\n    return  <div className={s.message}>{props.message}</div>\r\n}\r\n\r\n\r\n\r\nexport default Message;","import React from \"react\";\r\nimport s from './../Dialogs.module.css';\r\nimport {NavLink} from \"react-router-dom\"\r\n\r\nconst DialogItem =(props) => {\r\n    let path = '/dialogs/' + props.id;\r\n\r\n    return <div className={s.dialog + ' ' + s.active}>\r\n        <img src={props.avatar}/>\r\n        <NavLink to={path} activeClassName={s.activelink}>{props.name}</NavLink>\r\n    </div>\r\n}\r\n\r\nexport default DialogItem;","import {Field, reduxForm} from \"redux-form\";\r\nimport React from \"react\";\r\nimport {Textarea} from \"../../common/FormControls/FormControl\";\r\nimport {maxLengthCreator, required} from \"../../../Utils/validators/validators\";\r\n\r\nconst maxLength100 = maxLengthCreator(100);\r\n\r\nconst AddMessageForm = (props) => {\r\n    return (<form onSubmit={props.handleSubmit}>\r\n        <div>\r\n            <Field placeholder={\"Enter your message\"} name={\"newMessageBody\"} component={Textarea} validate={[required, maxLength100]} />\r\n        </div>\r\n        <div>\r\n            <button>Add Massage</button>\r\n        </div>\r\n    </form>)\r\n}\r\n\r\nconst DialogReduxForm = reduxForm({\r\n    form: 'dialog'\r\n})(AddMessageForm);\r\n\r\nexport default DialogReduxForm;","import React from \"react\";\r\nimport s from './Dialogs.module.css';\r\nimport Message from \"./Message/Message\";\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport DialogReduxForm from \"./DialogForm/DialogForm\";\r\n\r\n\r\n\r\nconst Dialogs = (props) => {\r\n\r\n    let state = props.dialogsPage;\r\n    let dialogsElements = state.dialogs.map( d => <DialogItem name={d.name} avatar={d.avatar} id={d.id} /> );\r\n    let messagesElements = state.messages.map( m => <Message  message={m.message} id={m.id} /> );\r\n    let newMessageBody = state.newMessageBody;\r\n\r\n    let addNewMessage = (values) => {\r\n        props.sendMessage(values.newMessageBody);\r\n    }\r\n\r\n    return (\r\n        <div className= {s.dialogs}>\r\n            <div className={s.dialogsItems}>\r\n\r\n             {dialogsElements}\r\n\r\n            </div>\r\n         <div className={s.messages}>\r\n             <div className={s.messagesLeft}>\r\n                 <img src='https://ulibky.ru/wp-content/uploads/2019/10/avatarki_dlya_vatsap_dlya_devushek_42_28061027.jpg'/>\r\n\r\n               {messagesElements}\r\n\r\n                 <DialogReduxForm onSubmit={addNewMessage}/>\r\n\r\n             </div>\r\n\r\n         </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Dialogs;\r\n\r\n/* <DialogForm value={newMessageBody} onChange={onNewMessageChang} onClick={onSendMessageClick}/>\r\n<div>\r\n                     <div>\r\n                         <textarea\r\n    value={newMessageBody}\r\n    onChange={onNewMessageChang}\r\n    placeholder='Enter your message'/>\r\n                     </div>\r\n                     <div>\r\n                         <button onClick={onSendMessageClick}>Add Massage</button>\r\n                     </div>\r\n                 </div> */","import React from \"react\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) return <Redirect to={'/login'}/>\r\n            return <Component {...this.props}/>\r\n        }\r\n    }\r\n\r\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect) (RedirectComponent);\r\n\r\n    return ConnectedAuthRedirectComponent;\r\n}","import React from \"react\";\r\nimport {sendMessageCreator} from \"../../Redux/DialogsReducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {compose} from \"redux\";\r\nimport {withAuthRedirect} from \"../../Hoc/WithAuthRedirect\";\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        dialogsPage: state.dialogsPage\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        sendMessage: (newMessageBody) => {\r\n            dispatch(sendMessageCreator(newMessageBody));\r\n        }\r\n    }\r\n}\r\n\r\nexport default compose(connect(mapStateToProps, mapDispatchToProps), withAuthRedirect) (Dialogs);"],"sourceRoot":""}